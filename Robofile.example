% Declare that res/* are private and shouldn't be included in the
% listing of available targets.
private(res/_).

cancel(file/F) :-
    stringify(F, Path),
    exists_file(Path).

cancel(dir/F) :-
    stringify(F, Path),
    exists_directory(Path).

% Ensure that the Dropbox folder exists on this machine
cancel(res/dropbox, dir/env:'HOME' | ".ssh/
cancel(res/dropbox).

% Ensure that we're inside a working X11 instance
cancel(res/xrandr) :-
	sys_ok(xrandr).


cancel(res/network) :-
    shell_ok(ping(-c, 1, "8.8.8.8")).


cancel(sync/credentials) :-
    stringify(env:'HOME' | ".ssh/id_sync", Pa

depend(sync, res/network).
depend(sync, sync/credentials).
recipe(sync) :-

depend(comix2, res/dropbox).
recipe(comix2) :-
	stringify(env:'HOME' | "/Dropbox/projects/comix2", WorkDir),
	sys_ok('./run', [ --save ], [ cwd(WorkDir) ]).

depend(journal, res/dropbox).
recipe(journal) :-
	JournalPath = (env:'HOME' | "/Dropbox/)."),
	MountPath = (env:'HOME' | "/journal"),
	shell_ok(encfs(JournalPath, MountPath)).
cancel(journal) :-
	MountPath = (env:'HOME' | "/journal"),
	shell_ok(mountpoint(MountPath)).

depend(solo, res/xrandr).
recipe(solo) :-
	shell_ok(
		xrandr(
			--output("HDMI1"),
			--off,
			--output("VGA1"),
			--off,
			--output("eDP1"),
			--primary,
			--mode("1920x1080"),
			--pos("0x0"),
			--rotate(normal)
		)
	).

depend(dual, res/xrandr).
recipe(dual) :-
	shell_ok(
		xrandr(
			--output("HDMI1"),
			--off,

			--output("VGA1"),
			--mode("1680x1050"),
			--pos("1920x0"),
			--rotate(normal),

			--output("eDP1"),
			--primary,
			--mode("1920x1080"),
			--pos("0x0"),
			--rotate(normal)
		)
	).


recipe(test) :- shell_ok(sleep(500)).
